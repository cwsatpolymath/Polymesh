name: Build artifacts

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check out the code
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true
          default: true

      - name: Configure caching for Rust
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wasm-gc
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: install
          args: --git https://github.com/alexcrichton/wasm-gc --force

      - name: Build wasm and native code
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/polymesh
          asset_name: polymesh
          asset_content_type: application/octet-stream
